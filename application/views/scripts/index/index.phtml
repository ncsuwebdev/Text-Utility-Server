<h2>Overview</h2>
<p>
This API was built for the sole purpose of allowing users at NC State University to generate on-brand logos,
headers, and graphics which abide by the requirements made available at <a href="http://ncsu.edu/brand">http://ncsu.edu/brand</a>.</p>
<p>This service is provided by the <a href="http://oit.ncsu.edu">Office of Information Technology</a> and
<a href="http://ot.ncsu.edu">Outreach Technology</a>.  Send any support requests to 
<a href="mailto:itappdev@ncsu.edu">itappdev@ncsu.edu</a>.
</p>
<br /><br />
<h2>Usage Notes</h2>
<p>
	<ol>
		<li><b>Branding</b><br />
		No matter the image created with this tool, it is still important that usage abides by the guidelines set
		forth by the <a href="http://ncsu.edu/brand">NC State Branding Guidelines</a>.<br /><br />
		</li>
		<li><b>Word Separation</b><br />
		By default, the <b>boldText</b> and <b>normalText</b> fields will not be spaced out.  To make the illusion of
		two separate words, you should be a space at the end of the <b>boldText</b> string or the beginning of the <b>normalText</b>
		string.<br /><br />
		</li>
		<li><b>Create An Image Using The Demo Tool</b><br /></b>
		You can use the <a href="<?php echo $this->url(array(), 'demo', true); ?>">demo tool</a> 
		to create your image however you want.  You can then save the image to your local webspace 
		by right-clicking on the image and select "Save As...".<br /><br />
		</li>
		<li><b>Make an API Call</b><br />
		You can directly link to this service by using the image URL with the specific parameters
		as defined below.  This will return a PNG image to you.<br /><br />
		</li>
	</ol>

	We do not do any rate limiting currently, but we would request that if you wrap the API in any
	kind of configuration builder that you cache the image created locally.  We do server-based
	image caching, but the fewer requests, the better.
</p>
<br /><br /><br />
<h2>Configuration Options</h2>
<p>
There are many configuration options that you should pass to the API.  These options are passed
as "<b>key</b>=<b>value</b>" in the query string.  If one of the options is invalid, the value 
will be reset to the default value as specified in the table below.
</p>
<p><b>Base API URL:</b> <?php echo $this->apiUrl; ?>?&lt;options&gt;</p>
<table>
	<thead>
		<tr>
			<th>Configuration Option</th>
			<th>Default Value</th>
			<th>Description</th>
			<th>Expected Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>boldText</td>
			<td><?php echo $this->boldText; ?></td>
			<td>First part of the logo, which has bolded text.</td>
			<td>string, limited to 256 characters</td>
		</tr>
		<tr>
			<td>normalText</td>
			<td><?php echo $this->normalText; ?></td>
			<td>Second part of the logo, which has normal weight text.</td>
			<td>string, limited to 256 characters</td>
		</tr>
		<tr>
			<td>fontSize</td>
			<td><?php echo $this->options['fontSize']; ?></td>
			<td>Size in points for the font</td>
			<td>integer, between 10 and 256 </td>
		</tr>
		<tr>
			<td>fontColor</td>
			<td><?php echo $this->options['fontColor']; ?></td>
			<td>Brand-aware color key defining which color to make the font</td>
			<td>string, limited to branded color keys</td>
		</tr>
		<tr>
			<td>leftTextOffset</td>
			<td><?php echo $this->options['leftTextOffset']; ?></td>
			<td>Distance in pixels to offset the text from the left border of the image</td>
			<td>integer</td>
		</tr>
		<tr>
			<td>verticalAlign</td>
			<td><?php echo $this->options['verticalAlign']; ?></td>
			<td>Alignment of the text vertically inside the image</td>
			<td>"top", "center", or "bottom"</td>
		</tr>
		<tr>
			<td>backgroundColor</td>
			<td><?php echo $this->options['backgroundColor']; ?></td>
			<td>Brand-aware color key defining which color to make the background</td>
			<td>string, limited to branded color keys</td>
		</tr>
		<tr>
			<td>transparent</td>
			<td><?php echo ($this->options['transparent']) ? '1' : '0'; ?></td>
			<td>Flag to make the background color transparent</td>
			<td><b>1</b> = make it transparent<br /><b>0</b> = no transparency</td>
		</tr>
		<tr>
			<td>width</td>
			<td><?php echo $this->options['width']; ?></td>
			<td>Width, in pixels, for the image</td>
			<td>integer, between 1 and 2000</td>
		</tr>
		<tr>
			<td>height</td>
			<td><?php echo $this->options['height']; ?></td>
			<td>Height, in pixels, for the image</td>
			<td>integer, between 1 and 2000</td>
		</tr>
	</tbody>
</table>
<br />
<b>Branded Color Keys:</b><br />
These keys are required for options <b>fontColor</b> and <b>backgroundColor</b>.
<br /><br />
<table>
	<thead>
		<tr>
			<th>Key</th>
			<th>Color Swatch</th>
			<th>Hex</th>
		</tr>
	</thead>
	<tbody>
		<?php foreach ($this->colors as $key => $value): ?>
		<tr>
			<td><?php echo $key; ?></td>
			<td style="background-color:#<?php echo $value; ?>"></td>
			<td>#<?php echo $value; ?></td>
		</tr>
		<?php endforeach; ?>
	</tbody>
</table>
<br /><br />
<h2>Download the Code</h2>
<p>All of the code for this project, as well as additional resources, are free and provided 
as open source software by the <a href="http://oit.ncsu.edu">Office of Information Technology</a> and
<a href="http://ot.ncsu.edu">Outreach Technology</a>.</p>
<p>Code is available on GitHub at <a href="http://github.com/ncsuwebdev">http://github.com/ncsuwebdev</a>.
</p>
