<h2>Overview</h2>
<p>
    This API was built for the sole purpose of enabling users at NC State University to create on-brand logos, headers, 
    and graphics that conform to the requirements found at <a href="http://ncsu.edu/brand">http://ncsu.edu/brand</a>.
</p>
<p>
    This service is provided by the <a href="http://oit.ncsu.edu">Office of Information Technology</a> and
    <a href="http://ot.ncsu.edu">Outreach Technology</a>.  Send any support requests to 
    <a href="mailto:itappdev@ncsu.edu">itappdev@ncsu.edu</a>.
</p>
<br /><br />
<h2>Usage Notes</h2>
<p>
	<ol>
		<li><b>Branding</b><br />
		It is the responsibility of the user to ensure that any image created with this API conforms to 
		the <a href="http://ncsu.edu/brand">NC State Branding Guidelines</a>.<br /><br />
		</li>
		
		<li><b>Color Selection for Website Headers</b><br />
		A logo image created for a Web site header must consist of only the primary colors: Red, Black 
		and White. No other color combinations should be used for a logo image that appears in a 
		Web site header.<br /><br />
		</li>
		
		<li><b>Accessible Color Combinations</b><br />
		Each combination of font and background colors must meet the WCAG 2 Level AA guidelines. For 
		assistance in selecting accessible color combinations, see the 
		<a href="http://accessibility.oit.ncsu.edu/tools/color-contrast/accessible-color-palette.php?&primary=CC0000,000000,FFFFFF&secondary=383838,666666,CCCCCC,E1E1E1,5C5541,666633,556677,A20000&tertiary=A79574,C5BD9D,E5E1D0,778855,99AA77,CCDDAA,67849C,CC9900&level=AA&ncsu=1">
		NC State University Color Palette Accessibility Checker</a>.<br /><br />
		</li>
		
		<li><b>Saving an Image</b><br />
		After you create an image with the <a href="<?php echo $this->url(array(), 'demo', true); ?>">demo tool</a>, 
		you can save it to your local Web space by right-clicking on the image and selecting "Save As..."<br /><br />
		</li>
		
		<li><b>Make an API Call</b><br />
		You can link directly to this service by using the image URL with the specific parameters as defined 
		below. This will return a PNG image to you.<br /><br />
		</li>
	</ol>

	We do not do any rate limiting currently, but we request that if you wrap the API in a configuration 
	builder that you cache the created image locally. We do server-based image caching, but the fewer 
	requests, the better.
</p>
<br /><br /><br />
<h2>Configuration Options</h2>
<p>
There are many configuration options that you should pass to the API.  These options are passed
as "<b>key</b>=<b>value</b>" in the query string.  If one of the options is invalid, the value 
will be reset to the default value as specified in the table below.
</p>
<p><b>Base API URL:</b> <?php echo $this->apiUrl; ?>?&lt;options&gt;</p>
<table>
	<thead>
		<tr>
			<th>Configuration Option</th>
			<th>Default Value</th>
			<th>Description</th>
			<th>Expected Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>text</td>
			<td><?php echo $this->text; ?></td>
			<td>Text to be displayed on the logo.  Wrap value in astericks (*) to make it bold.  Multi-line
			also supported.</td>
			<td>string, limited to 256 characters</td>
		</tr>
		<tr>
			<td>fontSize</td>
			<td><?php echo $this->options['fontSize']; ?></td>
			<td>Size in points for the font</td>
			<td>integer, between 10 and 256 </td>
		</tr>
		<tr>
			<td>fontColor</td>
			<td><?php echo $this->options['fontColor']; ?></td>
			<td>Brand-aware key defining the font color</td>
			<td>string, limited to branded color keys</td>
		</tr>
		<tr>
			<td>backgroundColor</td>
			<td><?php echo $this->options['backgroundColor']; ?></td>
			<td>Brand-aware key defining the background color</td>
			<td>string, limited to branded color keys</td>
		</tr>
		<tr>
			<td>transparent</td>
			<td><?php echo ($this->options['transparent']) ? '1' : '0'; ?></td>
			<td>Flag to make the image background color transparent</td>
			<td><b>1</b> = make it transparent<br /><b>0</b> = no transparency</td>
		</tr>
		<tr>
			<td>leftTextOffset</td>
			<td><?php echo $this->options['leftTextOffset']; ?></td>
			<td>Distance in pixels to offset the text from the left border of the image</td>
			<td>integer</td>
		</tr>
		<tr>
			<td>baselineTextOffset</td>
			<td><?php echo $this->options['baselineTextOffset']; ?></td>
			<td>Distance in pixels to offset the text from the bottom border of the image</td>
			<td>integer</td>
		</tr>
		<tr>
			<td>lineSpacing</td>
			<td><?php echo $this->options['lineSpacing']; ?></td>
			<td>Distance in pixels between the lines of multi-line text</td>
			<td>integer</td>
		</tr>
		<tr>
			<td>width</td>
			<td><?php echo $this->options['width']; ?></td>
			<td>Image width in pixels</td>
			<td>integer, between 1 and 2000</td>
		</tr>
		<tr>
			<td>height</td>
			<td><?php echo $this->options['height']; ?></td>
			<td>Image height in pixels</td>
			<td>integer, between 1 and 2000</td>
		</tr>
	</tbody>
</table>
<br />
<b>Branded Color Keys:</b><br />
These keys are required for options <b>fontColor</b> and <b>backgroundColor</b>.
<br /><br />
<table>
	<thead>
		<tr>
			<th>Key</th>
			<th>Color Swatch</th>
			<th>Hex</th>
		</tr>
	</thead>
	<tbody>
		<?php foreach ($this->colors as $key => $value): ?>
		<tr>
			<td><?php echo $key; ?></td>
			<td style="background-color:#<?php echo $value; ?>"></td>
			<td>#<?php echo $value; ?></td>
		</tr>
		<?php endforeach; ?>
	</tbody>
</table>
<br /><br />
<h2>Download the Code</h2>
<p>All of the code for this project, as well as additional resources, are free and provided 
as open source software by the <a href="http://oit.ncsu.edu">Office of Information Technology</a> and
<a href="http://ot.ncsu.edu">Outreach Technology</a>.</p>
<p>Code is available on GitHub at <a href="http://github.com/ncsuwebdev">http://github.com/ncsuwebdev</a>.
</p>
